bool OnLoad()
{
	start();
	System::SetEnv("e4_doocclusion", 0);
	Process::Kill();
	return true;
}

void start()
{
	GameObjectList l1("water_supply_main");
	if(l1.GetNumObjects() > 0)
	{
		GameObject Obj = l1.GetObject(0);
		Game::ExecuteCommand("DummyCheckWaterSupply", &Obj);
		System::Log("WATER, Start DummyCheckWaterSupply");
	} else
		System::Log("WATER, Can not find object with name: water_supply_main");	
	Game::ExecuteCommand("Init_CSBITCHE", &Obj);
	Game::ExecuteCommand("Init_CSLAND", &Obj);
	Game::ExecuteCommand("Init_CSGRENELLE", &Obj);
	Game::ExecuteCommand("Init_TEC", &Obj);
	Game::ExecuteCommand("Init_SAMU", &Obj);
	
	bool ecartevehicule(GameObject *me)
	{
		Vector devantmoi(1.f, 0.f, 0.f);
		float matlui[9];
		float mat1[9];
		me->GetRotation(mat1[0], mat1[1], mat1[2], mat1[3], mat1[4], mat1[5], mat1[6], mat1[7], mat1[8]);
		Math::RotateVector(devantmoi.x, devantmoi.y, devantmoi.z, mat1);
		bool ret = false;
		GameObjectList l=me->GetObjectsInRange(1400.0f,ACTOR_VEHICLE);
		for (int j=l.GetNumObjects()-1; j > -1; j--) {
			Vehicle v(l.GetObject(j));
			if (v.GetBlinkerStatus() != BLT_RIGHT && !v.IsBrakeLightEnabled() && v.IsCivilCar() && !v.IsParking() && !v.IsBurning() && !v.IsSmoking() && !v.IsDestroyed() && !v.IsCollidingWithVirtualObject("secartepas")) {
				Vector devantlui(1.f, 0.f, 0.f);
				v.GetRotation(matlui[0], matlui[1], matlui[2], matlui[3], matlui[4], matlui[5], matlui[6], matlui[7], matlui[8]);
				Vector oului = v.GetPosition() - me->GetPosition();
				Math::NormalizeVector(oului.x,oului.y,oului.z);
				float dotlui = devantmoi.x * oului.x + devantmoi.y * oului.y + devantmoi.z * oului.z;
				
				Math::RotateVector(devantlui.x, devantlui.y, devantlui.z, matlui);
				float doteux = devantmoi.x * devantlui.x + devantmoi.y * devantlui.y + devantmoi.z * devantlui.z;

				if (doteux >=0.3f && dotlui >= 0) {
					Game::ExecuteCommand("Modsirene",me);
					ret = true;
					v.SetCommandable(true);
					v.EnableBrakeLights(true);
					v.EnableBlinker(BLT_RIGHT);
					Vector offset(400.f, -160.f, 0.f);
				
					Math::RotateVector(devantlui.x, devantlui.y, devantlui.z, matlui);
					//if (GetRandomValue(0,10) > 4) offset.y = 160.f;
					Math::RotateVector(offset.x, offset.y, offset.z, matlui);
					Vector pos = v.GetPosition() + offset;
					v.PushActionMove(ACTION_NEWLIST, pos);
					v.PushActionWait(ACTION_APPEND,5.0f);
					//v.PushActionUsePath(ACTION_APPEND,v.GetStandardPath(),v.GetCurrentPathSpeed());
					v.PushActionDeleteOwner(ACTION_APPEND);
				}
			}
		}
		return ret;
	}

		bool intersection(GameObject *me)
	{
		bool ret = false;
		GameObjectList list = me->GetObjectsInRange(800.f, ACTOR_OBJECT);
		for(int i = 0; i < list.GetNumObjects(); i++) {
			if (list.GetObject(i)->IsValid() && list.GetObject(i)->IsInsideMap()) {
				if (StrFind(list.GetObject(i)->GetPrototypeFileName(),"traffic")) {
					Game::ExecuteCommand("Modsirene",me);
					ret = true;
				}
			}
		}
		return ret;
	}
};