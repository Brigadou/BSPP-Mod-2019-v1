object RemoveConnection : CommandScript
{	
	RemoveConnection()
	{
		SetCursor("removeconnection");
		SetIcon("removeconnection");
		SetValidTargets(ACTOR_VEHICLE);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if (!Caller->IsValid() || !Target->IsValid() || (Caller->GetID()==Target->GetID()))
			return false;

		Vehicle vec(Target);
		if (!vec.IsValid() || vec.IsDestroyed() || !vec.HasName("Vehicle"))
			return false;	

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson()||p.IsLinkedWithPerson()|| p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		GameObject con01;
		GameObjectList lcon;

		lcon = Game::GetGameObjects("Connection");
			con01 = lcon.GetObject(0);

		Vector pos = con01.GetPosition();

		Person p(Caller);
		p.PushActionMove(ACTION_APPEND, pos);
		p.PushActionSwitchAnim(ACTION_APPEND, "opendoor");
		p.PushActionExecuteCommand(ACTION_APPEND,"remove");

	}
};

object RemoveConnection02 : CommandScript
{	
	RemoveConnection02()
	{
		SetCursor("removeconnection");
		SetIcon("removeconnection");
		SetValidTargets(ACTOR_VEHICLE);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if (!Caller->IsValid() || !Target->IsValid() || (Caller->GetID()==Target->GetID()))
			return false;

		Vehicle vec(Target);
		if (!vec.IsValid() || vec.IsDestroyed() || !vec.HasName("Vehicle"))
			return false;	

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson()||p.IsLinkedWithPerson()|| p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		GameObject con01;
		GameObjectList lcon;

		lcon = Game::GetGameObjects("Connection");
			con01 = lcon.GetObject(0);

		Vector pos = con01.GetPosition();

		GameObject rhelp;
		GameObjectList lrhelp;

		lrhelp = Game::GetGameObjects("RouteHelper");
			rhelp = lrhelp.GetObject(0);

		Vector poshelp = rhelp.GetPosition();

		Person p(Caller);
		p.PushActionMove(ACTION_NEWLIST, poshelp);
		p.PushActionMove(ACTION_APPEND, pos);
		p.PushActionSwitchAnim(ACTION_APPEND, "opendoor");
		p.PushActionExecuteCommand(ACTION_APPEND,"remove");

	}
};

object remove : CommandScript
{	
	remove()
	{
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		return true;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		GameObject con01;
		GameObject con02;
		GameObjectList lcon;

		lcon = Game::GetGameObjects("Connection");
			con01 = lcon.GetObject(0);

		if(lcon.GetNumObjects() == 2)
			con02 = lcon.GetObject(1);

		Vector pos = con01.GetPosition();

		if(lcon.GetNumObjects() == 2)
		{
			con01.PushActionDeleteOwner(ACTION_NEWLIST);
			con02.PushActionDeleteOwner(ACTION_NEWLIST);

			Audio::PlaySample3D("mod:/Audio/FX/effects/con01.wav", pos);
			Audio::PlaySample3D("mod:/Audio/FX/effects/con02.wav", pos);
		}
		else
		{
			con01.PushActionDeleteOwner(ACTION_NEWLIST);

			Audio::PlaySample3D("mod:/Audio/FX/effects/con01.wav", pos);
		}
	}
};
