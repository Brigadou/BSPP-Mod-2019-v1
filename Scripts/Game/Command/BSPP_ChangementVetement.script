//******************************************************************************************
// #Version 2.5#
//
// 		Includes: All Changing f1 commands
//
//	- ChangeTofeu
//	- ChangeToARI
//  - ChangeToGilet
//	- ChangeToNBC
//  - ChangeToNBC2
//	- ChangeToPlonge
//	- ChangeToGREP
//	- DummyChange
//
//		Original script for Emergency 3 by Rev Bem
//		Made compatible for Emergency 4 by Modder (HUN EM4 MOD TEAM)
//		
//		Usage of this script in other mods is NOT allowed without permission of Modder
//
//******************************************************************************************

const char DUMMYCHANGE[]	= "DummyChange";

object Feu_2cl : CommandScript
{
	Feu_2cl()
	{
		SetCursor("tenuef1");
		SetIcon("tenuef1");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF || v.GetVehicleType() == VT_FIREFIGHTERS_DEKONP)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 1, false);
	}
};

object ARI_2cl : CommandScript
{
	ARI_2cl()
	{
		SetCursor("ari");
		SetIcon("ari");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF || v.GetVehicleType() == VT_FIREFIGHTERS_DEKONP)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 2, false);
	}
};

object Gilet_2cl : CommandScript
{
	Gilet_2cl()
	{
		SetCursor("chasuble");
		SetIcon("chasuble");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF || v.GetVehicleType() == VT_FIREFIGHTERS_DEKONP)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 3, false);
	}
};

object Feu_cpt : CommandScript
{
	Feu_cpt()
	{
		SetCursor("tenuef1");
		SetIcon("tenuef1");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 4, false);
	}
};

object Gilet_cpt : CommandScript
{
	Gilet_cpt()
	{
		SetCursor("chasuble");
		SetIcon("chasuble");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 5, false);
	}
};

object Tenue_F1 : CommandScript
{
	Tenue_F1()
	{
		SetCursor("tenuef1");
		SetIcon("tenuef1");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF || v.GetVehicleType() == VT_FIREFIGHTERS_DEKONP)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 6, false);
	}
};

object ChangeToNBC : CommandScript
{
	ChangeToNBC()
	{
		SetCursor("tenuenrbc");
		SetIcon("tenuenrbc");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF || v.GetVehicleType() == VT_FIREFIGHTERS_DEKONP)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 7, false);
	}
};

object ChangeToPlonge : CommandScript
{
	ChangeToPlonge()
	{
		SetCursor("tenueplg");
		SetIcon("tenueplg");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 8, false);
	}
};

object ChangeToGREP : CommandScript
{
	ChangeToGREP()
	{
		SetCursor("tenuegrep");
		SetIcon("tenuegrep");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 9, false);
	}
};

object Tenue_F1_grep : CommandScript
{
	Tenue_F1_grep()
	{
		SetCursor("tenuegrep");
		SetIcon("tenuegrep");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 10, false);
	}
};

object Feu_ca : CommandScript
{
	Feu_ca()
	{
		SetCursor("tenuef1");
		SetIcon("tenuef1");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 1, false);
	}
};

object ARI_ca : CommandScript
{
	ARI_ca()
	{
		SetCursor("ari");
		SetIcon("ari");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 2, false);
	}
};

object Gilet_ca : CommandScript
{
	Gilet_ca()
	{
		SetCursor("chasuble");
		SetIcon("chasuble");
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetPossibleCallers(ACTOR_PERSON);
		SetValidTargets(ACTOR_VEHICLE | ACTOR_OBJECT);
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{

		if(!Caller->IsValid() || !Target->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;

		Person p(Caller);
		if(p.IsValid() && (p.IsCarryingPerson() || p.IsInDLKBasket() || p.IsLinkedWithPerson() || p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
			return false;

		Vehicle v(Target);

		if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_FIREFIGHTERS_RW || v.GetVehicleType() == VT_FIREFIGHTERS_GTF || v.GetVehicleType() == VT_FIREFIGHTERS_DLK || v.GetVehicleType() == VT_FIREFIGHTERS_TLF || v.GetVehicleType() == VT_FIREFIGHTERS_LPF)
		{
			return true;
		}
		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Caller->PushActionMove(ACTION_NEWLIST, Target, TARGET_PASSENGERDOOR);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
            Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMYCHANGE, Target, 3, false);
	}
};

object DummyChange : CommandScript
{
	DummyChange()
	{
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
            Vector Pos;
            float r[9];
            Person p;
            Pos = Caller->GetPosition();
            Caller->GetRotation(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8]);
		int PlayerID = Caller->GetPlayerMP();
		Vehicle v(Target);
		v.PushActionExecuteCommand(ACTION_APPEND, "OpenCloseDoor2", Caller, 1, false);
            Caller->PushActionSwitchAnim(ACTION_NEWLIST,"useobjmid");
		Caller->PushActionWait(ACTION_APPEND, 5.0f);
            Caller->SetCommandable(false);
		Caller->PushActionDeleteOwner(ACTION_APPEND);
			if(childID == 1)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/feu.e4p", Target->GetName());
            }
            if(childID == 2)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/ari.e4p", Target->GetName());
            }
            if(childID == 3)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/gilet.e4p", Target->GetName());
            }
			if(childID == 4)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/feu_cpt.e4p", Target->GetName());
            }
            if(childID == 5)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/gilet_cpt.e4p", Target->GetName());
            }
            if(childID == 6)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/tenue_F1.e4p", Target->GetName());
            }			
            if(childID == 7)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/tenue_nrbc.e4p", Target->GetName());
            }
            if(childID == 8)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/diver.e4p", Target->GetName());
            }
            if(childID == 9)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/tenue_grep.e4p", Target->GetName());
            }
            if(childID == 10)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/tenue_F1_grep.e4p", Target->GetName());
            }
            if(childID == 11)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/feu_ca.e4p", Target->GetName());
            }
            if(childID == 12)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/ari_ca.e4p", Target->GetName());
            }
            if(childID == 13)
            {
            	p = Game::CreatePerson("mod:Prototypes/Persons/Fire Department/gilet_ca.e4p", Target->GetName());
            }
		p.SetPlayerMP(PlayerID);
            p.SetPosition(Pos);
            p.SetRotation(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8]);
            p.Hide();
		p.PushActionWait(ACTION_NEWLIST, 5.f);
		p.PushActionShowHide(ACTION_APPEND, false);                   
	}
};

