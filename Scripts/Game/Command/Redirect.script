//  *******************************************************
//  *******************************************************
//  **							 **
//  **   modified by FwFreak für nrw-modifications.net	 **
//  **			  26.02.2010			 **
//  **							 **
//  **  	  www.essen-modifikation.de		 **
//  **							 **
//  *******************************************************
//  *******************************************************


// Hier die Meldung eintragen, die beim Ausführen im VO angezeigt werden soll.
const char * INFOTEXT_NO_REDIRECT="Impossible de rediriger le trafic !";



object Redirect : CommandScript
{
	Redirect()
	{
		SetValidTargets(ACTOR_PERSON);
		SetRestrictions(RESTRICT_SELFEXECUTE);
	}

	bool CheckPossible(GameObject *Caller)
	{
		if(!Caller->IsValid() || Caller->GetType() != ACTOR_PERSON)
			return false;
		Person p(Caller);
		if(p.IsValid() && (!p.IsEquipped() || p.GetEquipment() == EQUIP_REDIRECTSIGN) && !p.IsLinkedWithPerson() && p.GetEnteredCarID() == -1)
			return true;
		return false;
	}

	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if(!Caller->IsValid() || !Target->IsValid() || Target->GetID() != Caller->GetID())
			return false;

		Person p(Caller);
		if(p.IsValid() && (!p.IsEquipped() || p.GetEquipment() == EQUIP_REDIRECTSIGN) && !p.IsLinkedWithPerson() && p.GetEnteredCarID() == -1)
			return true;

		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Person p(Caller);
		GameObjectList ol;
		GameObject obj;
		bool check=true;

		Game::CollectObstaclesOnVirtualObject("no_redirect",ol, ACTOR_PERSON);

		for(int i=0; i < ol.GetNumObjects(); i++)
		{
			if(ol.GetObject(i)->GetID() == Caller->GetID())
			{
				check=false;
				Game::ShowHelpTextWindow(INFOTEXT_NO_REDIRECT);
			}
		}

		if(check)
			Caller->PushActionRedirect(ACTION_NEWLIST);
	}
};
